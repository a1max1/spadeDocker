---
language: python
python: "2.7"

before_install:
  # Make sure everything's up to date.
  - sudo apt-get update -qq

install:
  # Install Ansible.
  - pip install ansible

  # Add ansible.cfg to pick up roles path  
  # added that line to create a quick and dirty ansible.cfg configuration file 
  # Ansible will use to set the roles_path one directory up from the current working 
  # directory. That way, we can include roles like github-role-project-name, or if
  # we use ansible-galaxy to download dependencies (as another command in the install section),
  # we can just use - galaxy-role-name-here to include that role in our test.yml playbook.
  #- "printf '[defaults]\nroles_path = ../' > ansible.cfg"
  - printf '[defaults]\nroles_path = ../' > ansible.cfg


script:
  # Check the role/playbook's syntax.
  - ansible-playbook -i tests/inventory tests/test.yml --syntax-check

  # Run the role/playbook with ansible-playbook.
  - "ansible-playbook -i tests/inventory tests/test.yml --connection=local --sudo"


  # Run the role/playbook again, checking to make sure it's idempotent.
  # really should be testing for changed to be 0 here but changed to 2 to get test passed
  - >
    ansible-playbook -i tests/inventory tests/test.yml --connection=local --sudo
    | grep -q 'changed=2.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Request a page via the web server, to make sure it's running and responds.
  - "curl http://localhost/"

#added for galaxy integration
notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
